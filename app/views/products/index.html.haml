%h1= t("controller.products.index.h1")
%div{"ng-controller" => "ProductsController"}
  %ul.media-list{"infinite-scroll" => "products.nextPage()", "infinite-scroll-disabled" => "products.busy", "infinite-scroll-distance" => "1"}
    - @products.each do |product|
      %li.media
        %span.price
          #{t("controllers.products.index.price")}:
          - if product.inet_price.present?
            #{product.inet_price}
            %s= product.price
          - else
            #{product.price}
        %a.pull-left{:href => product_url(product)}
          %img.media-object{:src => product.image.url(:small), :alt => product.title}
        %span.title
          %a{:href => products_url(product)} #{product.title}

    %li.media{"ng-repeat" => "item in products.items"}
      %span.price{"ng-if" => "item.inet_price.length !== 0"}
        #{t("controllers.products.index.price")}:: {{item.inet_price}}
        %s
          {{item.price}}
      %span.price{"ng-if" => "item.inet_price.length === 0"}
        #{t("controllers.products.index.price")}:: {{item.price}}
      %a.pull-left{"ng-href" => "/products/{{item.id}}"}
        %img.media-object{'ng-src' => '{{item.image_url}}', :alt => '{{item.title}}'}
      %span.title
        %a{"ng-href" => "/products/{{item.id}}"}
          {{item.title}}
    %div{"ng-show" => "products.busy"} #{t("controllers.products.index.loading_text")}:
:javascript
  var myApp = angular.module('prod_import', ['infinite-scroll']);

  myApp.controller('ProductsController', function($scope, Products) {
      $scope.products = new Products();
  });

  myApp.factory('Products', function($http) {
      var Products = function() {
          this.items = [];
          this.busy = false;
          this.page = 2;
      };

      Products.prototype.nextPage = function() {
          if (this.busy) return;
          this.busy = true;

          var url = "/products?page=" + this.page;
          $http.get(url).success(function(data) {
            for (var i = 0; i < data.length; i++) {
                this.items.push(data[i]);
            }
            this.page = this.page + 1;;
            this.busy = false;
          }.bind(this));
      };

      return Products;
  });