.product
  %span.image
    %img{:src => @product.image.url(:small), :alt => @product.title}
  %h2
    = @product.title
  %span.price
    #{t("controllers.products.show.price")}: #{@product.inet_price}
    %s= @product.price
.comments{"ng-controller" => "CommentController"}
  %h3= t("controllers.products.show.add_comment")
  %form.css-form{name: "commentform"}
    .input-group
      %input.form-control{name: "username", "ng-model" => "newcomment.name", type: "text", :required=> "required", :placeholder => 'Name'}/
      %span{"ng-show" => "commentform.username.$error.required"}= t("controllers.products.show.errors.tell_us_your_name")
    .input-group
      %span.input-group-addon @
      %input.form-control{name: "useremail", "ng-model" => "newcomment.email", type: "email", :placeholder => 'Email'}/
      %div{"ng-show" => "commentform.useremail.$dirty || commentform.useremail.$invalid"}
        #{t("controllers.products.show.invalid")}:
        %span{"ng-show" => "commentform.useremail.$error.required"}= t("controllers.products.show.errors.tell_us_your_email")
        %span{"ng-show" => "commentform.useremail.$error.email"}= t("controllers.products.show.errors.email_not_valid")
    %br/
    %label= t("controllers.products.show.content")
    %textarea{name: "content", "ng-model" => "newcomment.content", :required => "required"}
    %span{"ng-show" => "commentform.content.$error.required"}= t("controllers.products.show.errors.add_some_comment")
    %br/
    %button{"ng-click" => "addComment()", "ng-disabled" => "commentform.$invalid"}= t("controllers.products.show.add_button")
  %h3= t("controllers.products.show.comments")
  %ul
    %li{"ng-repeat" => "comment in comments"}
      %span.email {{comment.email}}
      %span.name {{comment.name}}
      %p.content {{comment.content}}
        
:javascript
  var myApp = angular.module('prod_import', ['infinite-scroll', 'ngResource']);

  myApp.config([
      "$httpProvider", function($httpProvider) {
          $httpProvider.defaults.headers.common['X-CSRF-Token'] = $('meta[name=csrf-token]').attr('content');
      }
  ]);

  myApp.factory('Comments', function($resource){
      return $resource('/products/#{@product.id}/comments/:commentId.json', {}, {});
  })
  .controller('CommentController', function($scope, Comments) {
      $scope.comments = Comments.query();
      $scope.addComment = function() {
          $scope.comments.push(angular.copy($scope.newcomment));
          Comments.save($scope.newcomment);
          $scope.newcomment  = {};
      };
  });
